services:
  frontend:
    build:
      context: ./wordle_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./wordle-app
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/wordle
      - POSTGRES_URI=postgresql://postgres:postgres@postgres:5432/wordle
      - REDIS_HOST=redis
    depends_on:
      - mongo
      - postgres
      - redis

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user123
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: wordle
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin       # Domyślny użytkownik admin
      KEYCLOAK_ADMIN_PASSWORD: admin # Domyślne hasło admina
      # Możesz dodać import konfiguracji realmu przy starcie, jeśli masz plik eksportu
      # DB_VENDOR: POSTGRES # Jeśli chcesz używać zewnętrznej bazy danych dla Keycloak
      # DB_ADDR: postgres # Nazwa serwisu postgres
      # DB_DATABASE: keycloak
      # DB_USER: <user_dla_keycloak>
      # DB_PASSWORD: <haslo_dla_keycloak>
      # volumes:
      # - ./path/to/your/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    command: start-dev # Dla dewelopmentu. Dla produkcji użyj 'start' i skonfiguruj bazę danych, HTTPS itp.
    # depends_on: # Jeśli Keycloak ma używać Twojej instancji Postgres
    #   - postgres

volumes:
  mongo_data:
  postgres_data:


# docker-compose up --build

