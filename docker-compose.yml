services:
  gateway:
    build: ./gateway
    ports:
      - "5000:5000"
    depends_on:
      - keycloak
    environment:
      - PORT=5000
    networks:
      - wordle-net

  frontend:
    build:
      context: ./wordle_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - gateway
    networks:
      - wordle-net

  user-service:
    build: ./user-service
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres-user
    networks:
      - wordle-net

  game-service:
    build: ./game-service
    ports:
      - "5002:5002"
    environment:
      - MONGODB_URI=mongodb://mongo:27017/wordle
      - REDIS_HOST=redis
    depends_on:
      - mongo
      - redis
    networks:
      - wordle-net

  postgres-user:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: user123
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: postgres
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    networks:
      - wordle-net

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - wordle-net

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wordle-net

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user123
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wordle-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.4
    container_name: keycloak
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: user123
      KC_DB_PASSWORD: pass123
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev # Dla dewelopmentu. Dla produkcji użyj 'start' i skonfiguruj bazę danych, HTTPS itp.
    depends_on:
      - postgres
    networks:
      - wordle-net

volumes:
  mongo_data:
  postgres_data:
  redis_data:
  postgres-user-data:

networks:
  wordle-net:
    driver: bridge

# docker-compose up --build
# docker-compose up --build backend
